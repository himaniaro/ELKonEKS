AWSTemplateFormatVersion: '2010-09-09'
Description: 'Amazon EKS Cluster using a new VPC in eu-west-1 with only public subnets'

Parameters:
  ClusterName:
    Type: String
    Description: EKS cluster name
    Default: eks-cluster
  NodeInstanceType:
    Type: String
    Description: EC2 instance type for the cluster nodes
    Default: m5.xlarge
  NodeGroupName:
    Type: String
    Description: EKS node group name
    Default: eks-node-group
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select [0, !GetAZs 'eu-west-1']
      MapPublicIpOnLaunch: true

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: !Select [1, !GetAZs 'eu-west-1']
      MapPublicIpOnLaunch: true

  RouteTablePublic:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  RoutePublic:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref RouteTablePublic
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  AssociateRouteTablePublic1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref RouteTablePublic

  AssociateRouteTablePublic2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref RouteTablePublic

  EKSClusterRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: [eks.amazonaws.com]
            Action: ['sts:AssumeRole']
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
        - arn:aws:iam::aws:policy/AmazonEKSServicePolicy

  EKSCluster:
    Type: AWS::EKS::Cluster
    Properties:
      Name: !Ref ClusterName
      ResourcesVpcConfig:
        SubnetIds:
          - !Ref PublicSubnet1
          - !Ref PublicSubnet2
      RoleArn: !GetAtt EKSClusterRole.Arn

  EKSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: EKS Cluster Security Group
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 10250
          ToPort: 10250
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0

  NodeGroupRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: [ec2.amazonaws.com]
            Action: ['sts:AssumeRole']
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
        - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy

  NodeGroupInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref NodeGroupRole

  NodeGroup:
    Type: AWS::EKS::Nodegroup
    Properties:
      ClusterName: !Ref EKSCluster
      NodegroupName: !Ref NodeGroupName
      ScalingConfig:
        DesiredSize: 3
        MaxSize: 3
        MinSize: 1
      DiskSize: 20
      Subnets:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      InstanceTypes: [!Ref NodeInstanceType]
      AmiType: AL2_x86_64
      RemoteAccess:
        Ec2SshKey: !Ref KeyName
      NodeRole: !GetAtt NodeGroupRole.Arn

Outputs:
  VPCId:
    Description: The VPC Id
    Value: !Ref VPC
  EKSClusterName:
    Description: The name of the EKS Cluster
    Value: !Ref EKSCluster
  EKSClusterEndpoint:
    Description: The endpoint for the EKS Cluster
    Value: !GetAtt EKSCluster.Endpoint
  EKSClusterSecurityGroup:
    Description: Security group of the EKS Cluster
    Value: !Ref EKSSecurityGroup
  NodeGroupName:
    Description: The name of the node group
    Value: !Ref NodeGroup
  NodeInstanceRole:
    Description: IAM role associated with the nodes
    Value: !Ref NodeGroupRole
  PublicSubnet1:
    Description: Public Subnet 1
    Value: !Ref PublicSubnet1
  PublicSubnet2:
    Description: Public Subnet 2
    Value: !Ref PublicSubnet2
